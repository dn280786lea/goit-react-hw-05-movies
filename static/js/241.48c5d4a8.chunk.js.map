{"version":3,"file":"static/js/241.48c5d4a8.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst key = '6b4b55eef0881e4377ffe1c06efc2931';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  try {\n    const res = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    throw new Error(`Error fetching trending movies: ${error.message}`);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const searchCredits = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const searchRewie = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const getMovieDetails = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}/movie/${id}?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovieVideo = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/videos?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport { BASE_URL, key, BASE_IMAGE_URL };\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchRewie } from '../API/API';\nimport {} from './MovieReviews.css';\n\nconst MovieReviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await searchRewie(id);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  if (!reviews) {\n    return <div>Loading reviews...</div>;\n  }\n\n  return (\n    <div className=\"reviews\">\n      <h2>Movie Reviews</h2>\n      <ul>\n        {reviews.results.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["BASE_URL","key","BASE_IMAGE_URL","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","concat","sent","abrupt","data","t0","Error","message","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","console","error","_x","searchCredits","_ref3","_callee3","id","_context3","_x2","searchRewie","_ref4","_callee4","_context4","_x3","getMovieDetails","_ref5","_callee5","_context5","_x4","getMovieVideo","_ref6","_callee6","_context6","_x5","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","reviewsData","_jsxs","className","children","_jsx","results","map","review","author","content"],"sourceRoot":""}