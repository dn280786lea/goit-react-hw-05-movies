{"version":3,"file":"static/js/300.686233a6.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/Cast/Cast.jsx","components/MovieDetails/MovieDatails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst key = '6b4b55eef0881e4377ffe1c06efc2931';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  try {\n    const res = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    throw new Error(`Error fetching trending movies: ${error.message}`);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const searchCredits = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const searchRewie = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const getMovieDetails = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}/movie/${id}?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport { BASE_URL, key, BASE_IMAGE_URL };\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchCredits } from '../API/API';\nimport {} from './Cast.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [castData, setCastData] = useState(null);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const credits = await searchCredits(id);\n        setCastData(credits);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchCastData();\n  }, [id]);\n\n  if (!castData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Cast Information</h2>\n      <ul className=\"cast-info\">\n        {castData.cast.map(actor => (\n          <li className=\"class-info-character\" key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : '../img/istockphoto-1439973604-1024x1024.jpg'\n              }\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  NavLink,\n  Outlet,\n  Link,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { getMovieDetails, BASE_IMAGE_URL } from '../API/API';\nimport {} from './MovieDatails.css';\nimport Cast from '../Cast/Cast';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n\n  const formatReleaseDate = releaseDate => {\n    const parts = releaseDate.split('-');\n    const year = parts[0];\n    return year;\n  };\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(id);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  const handleClick = () => {\n    navigate(-1);\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"movie-details-container\">\n      <Link className=\"button_link\" onClick={handleClick}>\n        Go back\n      </Link>\n      <div className=\"movie-details-content\">\n        <img\n          className=\"img_moviedetails\"\n          src={`${BASE_IMAGE_URL}${\n            movieDetails.poster_path ||\n            '../img/istockphoto-1439973604-1024x1024.jpg'\n          }`}\n          alt={movieDetails.title}\n        />\n        <div className=\"text-details\">\n          <span>\n            <h2>\n              {movieDetails.original_title}\n              <span className=\"date\">\n                {formatReleaseDate(movieDetails.release_date)}\n              </span>\n            </h2>\n          </span>\n          <p className=\"info\">\n            <span className=\"info_view\">Overview:</span> {movieDetails.overview}\n          </p>\n          <p className=\"info\">\n            <span className=\"info_view\">User score: </span>\n            {movieDetails.runtime}%\n            <p>\n              <p className=\"info\">\n                <span className=\"info_view\">Genres:</span>\n              </p>\n              {movieDetails.genres.map(({ name }) => name).join(', ') || 'None'}\n            </p>\n          </p>\n          <h2>Additional information</h2>\n          <ul>\n            <li>\n              <NavLink\n                to=\"cast\"\n                className=\"add-info\"\n                activeclassname=\"active\"\n                exact\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"add-info\"\n                to=\"reviews\"\n                activeclassname=\"active\"\n                exact\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n      <Routes>\n        <Route path=\"cast\" element={<Cast movieId={id} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","key","BASE_IMAGE_URL","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","concat","sent","abrupt","data","t0","Error","message","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","console","error","_x","searchCredits","_ref3","_callee3","id","_context3","_x2","searchRewie","_ref4","_callee4","_context4","_x3","getMovieDetails","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","castData","setCastData","useEffect","fetchCastData","credits","_jsxs","children","_jsx","className","cast","map","actor","src","profile_path","alt","name","character","movieDetails","setMovieDetails","navigate","useNavigate","fetchMovieDetails","details","releaseDate","Link","onClick","poster_path","title","original_title","release_date","split","overview","runtime","genres","join","NavLink","to","activeclassname","exact","Suspense","fallback","Outlet","Routes","Route","path","element","Cast","movieId"],"sourceRoot":""}