{"version":3,"file":"static/js/484.40a33293.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/MovieList/MovieList.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst key = '6b4b55eef0881e4377ffe1c06efc2931';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  try {\n    const res = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    throw new Error(`Error fetching trending movies: ${error.message}`);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const searchCredits = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const searchRewie = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const getMovieDetails = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}/movie/${id}?api_key=${key}`);\n    return res.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport { BASE_URL, key, BASE_IMAGE_URL };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './MovieList.css';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className=\"MovieGallery\">\n      {movies.map(movie => (\n        <li className=\"MovieGalleryList\" key={movie.id}>\n          <Link className=\"MovieLink\" to={`/movie/${movie.id}`}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n            <span className=\"movie-title\">\n              {movie.title}\n              <span className=\"info_views\">\n                {movie.vote_average.toFixed(1)}%\n              </span>\n            </span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../components/API/API';\nimport './Movie.css';\nimport MoviesList from 'components/MovieList/MovieList';\n\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState('');\n\n  const fetchMoviesByName = useCallback(async query => {\n    try {\n      const moviesRequestByName = await searchMovies(query);\n      setSearchResults(moviesRequestByName.results);\n    } catch (error) {\n      console.log(error);\n      setError('Error fetching movies.');\n    }\n  }, []);\n  useEffect(() => {\n    const search = searchParams.get('search');\n    if (!search) return;\n    searchMovies(search);\n  }, [fetchMoviesByName, searchParams]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const search = e.target.search.value.trim().toLowerCase();\n    if (!search) return;\n    setSearchParams({ query: search });\n    await fetchMoviesByName(search);\n  };\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit} className=\"form\">\n          <input\n            placeholder=\"search\"\n            name=\"search\"\n            type=\"text\"\n            className=\"input\"\n          />\n          <button className=\"button\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n\n      {error && <h3>{error}</h3>}\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n};\n\nexport default MovieSearch;\n"],"names":["BASE_URL","key","BASE_IMAGE_URL","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","concat","sent","abrupt","data","t0","Error","message","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","console","error","_x","searchCredits","_ref3","_callee3","id","_context3","_x2","searchRewie","_ref4","_callee4","_context4","_x3","getMovieDetails","_ref5","_callee5","_context5","_x4","movies","_jsx","className","children","map","movie","_jsxs","Link","to","src","poster_path","width","alt","title","vote_average","toFixed","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchResults","setSearchResults","_useState3","_useState4","setError","fetchMoviesByName","useCallback","moviesRequestByName","results","log","useEffect","search","get","handleSubmit","e","preventDefault","target","value","trim","toLowerCase","onSubmit","placeholder","name","type","MoviesList"],"sourceRoot":""}